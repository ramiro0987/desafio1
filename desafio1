// Generar una contraseña temporal
def generatePassword() {
    def password = UUID.randomUUID().toString().replaceAll('-', '').take(8)
    return password
}

pipeline {
    agent any
    parameters {
        string(name: 'login', defaultValue: '', description: 'Ingresa el login')
        string(name: 'name', defaultValue: '', description: 'Ingresa el nombre')
        string(name: 'lastname', defaultValue: '', description: 'Ingresa el apellido')
        choice(name: 'department', choices: ['contabilidad', 'finanzas', 'tecnologia'], description: 'Selecciona el departamento')
    }
    stages {
        stage('Crea una password temporal') {
            steps {
                script {
                    def password = generatePassword().toString()
                    echo "Password temporal: ${password}"
                }
            }
        }
        stage('Validar y crear grupo') {
            steps {
                script {
                    // Verificar si el grupo existe; si no, crearlo
                    def groupExists = sh(script: "getent group ${params.department}", returnStatus: true)
                    if (groupExists != 0) {
                        echo "El grupo '${params.department}' no existe. Creándolo ahora..."
                        sh "sudo groupadd ${params.department}"
                    } else {
                        echo "El grupo '${params.department}' ya existe."
                    }
                }
            }
        }
        stage('Crea el usuario y asigna el grupo') {
            steps {
                script {
                    // Crear el usuario
                    sh "sudo useradd -m -s /bin/bash ${params.login}"
                    // Asignar el usuario al grupo
                    sh "sudo usermod -aG ${params.department} ${params.login}"
                }
            }
        }
        stage('Asigna la password temporal') {
            steps {
                script {
                    def password = generatePassword()
                    echo "${params.login}:${password}"
                    sh "echo ${params.login}:${password} | sudo chpasswd"
                }
            }
        }
        stage('Expirar la password temporal') {
            steps {
                sh "sudo passwd -e ${params.login}"
            }
        }
    }
    post {
        success {
            echo "Usuario creado exitosamente:"
            echo "Login: ${params.login}"
            echo "Departamento: ${params.department}"
        }
        aborted {
            echo "El proceso fue abortado. El usuario no fue creado."
            sh "sudo userdel -r ${params.login}"
        }
        failure {
            echo "Ocurrió un error. Eliminando el usuario..."
            sh "sudo userdel -r ${params.login}"
        }
    }
}

